# 개발환경용 멀티스테이지 Dockerfile
FROM node:18-alpine as development

# 작업 디렉토리 설정
WORKDIR /app

# 시스템 의존성 설치
RUN apk update && apk add --no-cache git

# package.json과 package-lock.json 복사
COPY package*.json ./

# 개발 의존성 포함하여 설치
RUN npm install

# 소스 코드 복사
COPY . .

# 포트 노출
EXPOSE 3000

# 개발 서버 실행
CMD ["npm", "start"]

# 프로덕션 빌드 스테이지
FROM node:18-alpine as build

WORKDIR /app

# package files 복사
COPY package*.json ./

# 프로덕션 의존성만 설치
RUN npm ci --only=production

# 소스 복사
COPY . .

# 빌드 실행
RUN npm run build

# 프로덕션 서빙 스테이지
FROM nginx:alpine as production

# 커스텀 nginx 설정
COPY nginx.conf /etc/nginx/nginx.conf

# 빌드된 앱을 nginx로 복사
COPY --from=build /app/build /usr/share/nginx/html

# 포트 노출
EXPOSE 3000

# nginx 실행
CMD ["nginx", "-g", "daemon off;"]