# CORS Preflight (OPTIONS) 요청 처리
if ($request_method = 'OPTIONS') {
    # OPTIONS 요청에 대한 응답 헤더 설정
    # 여기서 Access-Control-Allow-Origin을 설정하고, 실제 요청에 대한 중복을 피하기 위해
    # 아래의 일반적인 Access-Control-Allow-Origin 설정은 if 바깥으로 빼지 않거나,
    # 이 if 블록에서 return 204; 로 바로 종료하므로, 아래 헤더는 OPTIONS 요청에는 적용되지 않음.
    add_header 'Access-Control-Allow-Origin' '$http_origin' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With, Accept, Origin' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Max-Age' 86400;
    add_header 'Content-Length' 0;
    return 204; # 여기서 요청 처리 종료
}

# OPTIONS 요청이 아닌 다른 모든 요청 (GET, POST 등)에 대한 CORS 헤더
# if 블록에서 OPTIONS 요청은 return 204로 이미 처리되었으므로, 이 부분은 OPTIONS가 아닌 요청에만 적용됨.
add_header 'Access-Control-Allow-Origin' '$http_origin' always;
add_header 'Access-Control-Allow-Credentials' 'true' always;

# (선택 사항) 다른 Access-Control 헤더도 실제 요청에 필요하다면 여기에 추가할 수 있으나,
# 보통 OPTIONS 응답에 명시된 허용 범위 내에서 작동하므로 필수는 아닐 수 있음.
# add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always; # 이미 OPTIONS에서 허용했으므로 중복일 수 있음
# add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With, Accept, Origin' always; # 이미 OPTIONS에서 허용했으므로 중복일 수 있음